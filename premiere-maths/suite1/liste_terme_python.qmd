---
title: "Liste des termes d'une suite numérique"
format:
  html:
    toc: true
    number-sections: false
include-in-header:
  - text: |
      <link rel="stylesheet" href="../../assets/css/pyodide-mkdocs.css">
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.65.16/lib/codemirror.css">
      <script src="https://cdn.jsdelivr.net/npm/codemirror@5.65.16/lib/codemirror.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/codemirror@5.65.16/mode/python/python.js"></script>
      <script src="https://cdn.jsdelivr.net/pyodide/v0.26.4/full/pyodide.js"></script>
      <script src="../../assets/js/pyodide-mkdocs.js" defer></script>
description: "Algorithme de calcul des termes consécutifs - Notion de liste en Python."
order: 3
---

On introduit dans cette partie la notion de `liste` en Python. Une liste est une structure Python qui permet de stocker, dans une variable, un ensemble d’éléments comme des nombres.  <br>
Une liste se crée avec :

```python
L = []    # on crée une liste vide
L = [4]   # on crée une liste dont le premier élément est 4
```

De plus, les listes sont des structures ordonnées. Chaque élément est repéré par sa position : son indice (comme pour les suites) : 0 pour le premier élément, 1 pour le deuxième, etc.

```python
L = [1, 8, -5, 4]  # liste de quatre éléments : dans l'ordre 1, 8, -5 et 4
# L[0] renvoie la valeur 1
# L[2] renvoie la valeur -5
L.append(-2)       # permet d'ajouter -2 en dernière position de la liste
```

~~~{=html}
<div class="exo-wrap">
  <div class="editor-shell" id="exo2">
    <div class="bar-top"><span class="cell-num">Recherche de seuil</span></div>
    <textarea id="code">
L = [1, 8, -5, 4]  # liste de quatre éléments : dans l'ordre 1, 8, -5 et 4
print(L[0])        # renvoie la valeur 1
print(L[2])        # renvoie la valeur -5
L.append(-2)       # ajout en dernière position
print(L)
</textarea>
    <div class="output" id="out"><pre></pre></div>
    <div class="toolbar">
      <button class="btn" id="run" disabled></button>
      <button class="btn" id="check" disabled></button>
      <button class="btn" id="download"></button>
      <button class="btn" id="reset"></button>
      <button class="btn" id="clear"></button>
      <button class="btn" id="save"></button>
    </div>
  </div>
~~~

::: {.bloc .ex}
<span class="bloc-titre">Exemple :</span>  

Déterminer la suite des $n$ premiers termes de la suite $(u_n)$ définie par :  
$$u_n = 3n^2 - 5n + 1$$
:::

```python
def terme_u(n):
    L = []
    for i in range(n):
        u = 3 * i**2 - 5 * i + 1
        L.append(u)
    return L

terme_u(10)
```

~~~{=html}
<div class="exo-wrap">
  <div class="editor-shell" id="exo3">
    <div class="bar-top"><span class="cell-num">Recherche de seuil</span></div>
    <textarea id="code">
def terme_u(n):
    L = []
    for i in range(n):
        u = 3 * i**2 - 5 * i + 1
        L.append(u)
    return L

terme_u(10)
</textarea>
    <div class="output" id="out"><pre></pre></div>
    <div class="toolbar">
      <button class="btn" id="run" disabled></button>
      <button class="btn" id="check" disabled></button>
      <button class="btn" id="download"></button>
      <button class="btn" id="reset"></button>
      <button class="btn" id="clear"></button>
      <button class="btn" id="save"></button>
    </div>
  </div>
~~~

::: {.bloc .ex}
<span class="bloc-titre">Exemple :</span>  

Déterminer la suite des $n$ premiers termes de la suite $(u_n)$ définie par :  
$u_0 = 3$ et, pour tout $n \geqslant 2$,  
$$u_{n+1} = \frac{u_n^2}{n-1}$$

```python
def terme_u(n):
    u = 3
    L = [u]
    for i in range(2, n + 2):
        u = u**2 / (i - 1)
        L.append(u)
    return L

def terme_u_v2(n):
    L = [3]
    for i in range(2, n + 2):
        L.append(L[-1]**2 / (i - 1))  # L[-1] permet d'appeler le dernier élément de la liste
    return L

terme_u(5), terme_u_v2(5)
```
:::


<div class="nav-pages">
  <a class="prev" href="generation.html">⬅️</a>
  <a class="next" href="variations.html">➡️</a>
</div>